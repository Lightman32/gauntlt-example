@reallyslow
Feature: Look for basic web application vulnerabilities using Arachni

Background:

  Given "arachni" is installed
  And the following profile:
     | name                | value      |
     | url                 | TEST_URL                       |
     | depth               | 1                              |
     | timeout             | 00:09:00                       |

Scenario: Using the arachni, look for for forms with file upload functionality and verify no issues are found
 When I launch an "arachni" attack with:
  """
  arachni --checks=form_upload --platforms=linux,php --scope-directory-depth-limit=<depth> --timeout <timeout> <url>
  """
  Then the output should contain "0 issues were detected."

Scenario: Using the arachni, Looks for resources served over HTTP when the HTML code is server over HTTPS.
 When I launch an "arachni" attack with:
  """
  arachni --checks=mixed_resource --platforms=linux,php --scope-directory-depth-limit=<depth> --timeout <timeout> <url>
  """
Then the output should contain "0 issues were detected."

Scenario: Using the arachni, Logs cookies that are served over an encrypted channel but without having the secure flag set.
 When I launch an "arachni" attack with:
  """
  arachni --checks=insecure_cookies --platforms=linux,php --scope-directory-depth-limit=<depth> --timeout <timeout> <url>
  """
Then the output should contain "0 issues were detected."

Scenario: Using the arachni, look for unallowed HTTP methods
 When I launch an "arachni" attack with:
  """
  arachni --checks=allowed_methods --platforms=linux,php --scope-directory-depth-limit=<depth> --timeout <timeout> <url>
  """
Then the output should contain "0 issues were detected."

Scenario: Using the arachni, Checks whether or not the session cookie can be set to an arbitrary value
 When I launch an "arachni" attack with:
  """
  arachni --checks=session_fixation --platforms=linux,php --scope-directory-depth-limit=<depth> --timeout <timeout> <url>
  """
Then the output should contain "0 issues were detected."